v-if と　v-showの使い分け。
ユーザーが何らかの操作を行ってもデータの状態が変わらない場合は、v-ifを使用する
タブで表示内容を切り替える場合は、v-ifを使用すると切り替えるたびに追加と削除を発生するためv-showを使用する方が良い。

v-showはtemplateを使用できない。またDOMに必ず出力される

filterを使用すれば元の情報を描画せずに加工することできる。
{{ プロパティ名 | フィルター名 | フィルター名 }}

toLocaleString();

算出プロパティはキャッシュを残して効率よく使用する。
メソッドは再描画されるたびに実行。算出プロパティは依存関係があるリアクティブデータが更新されない限りキャッシュを参照し続けることを示しています。

コンポーネント外のイベントハンドラリングは、created mountedで登録する。beforeDestoryでイベントをかいじょする。
主にスクロール、リサイズイベントで使用する。

イベント系のfunction($event)からとることができる。
 
watch はcomputedオプションも監視することできる。
Ajaxで待ち時間を軽減したり、実行頻度を調整できるので快適なインターフェイスを提供することできる。

form系　
v-modelを使用した場合、value属性、checked属性、selected属性は無視される。
なのでコンポーネントに初期値を設定する。

日本語入力は直接inputイベントハンドラで更新する

checkbox は　true-valueとfalse-valueで文言を変更することが可能です。
グループの場合は、配列にvalue値を入れる。computedでつかみ、return this.group.join()でわかりやすくする

radioもcheckboxと同じような感じにする。
複数選択はのちに使用する場合に確認する。

カレンダー
createdに初期値を設定。現在の時間を入れないといけない。
変数に当日を格納し、明日に変更して登録する。
type = date　の　minを使う。 (HTMLの仕様)

カラー
カラーとスライダーのどちらを変更した時、もう一方の値を変更するためにウォッチャを使用して。




