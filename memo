
反転は、split().reverse().join('')で対応可能

v-text　と {{ message }} は同じ

12. v-once 実行を一度だけにする。書き換え処理の書き換え前などを表示することが可能
this.message = 'Hello' などで書き換えた場合。
(動画　22分)

13. v-html 関数内にタグを入れてもエスケープ処理をしてくれる
扱い注意。ユーザからの情報を受け取る場合は使用しない(XSS)

14. v-bind hrefなど属性値にそのまま二重カッコでいれても実行されないものを実行させる
: で引数をつける。　v-bind:url = "url" url="https://google.com/"

v-bindの応用的な使い方。オブジェクト形式で保存できる。<p v-bind="{ href: url, id: number }">

v-onの次はイベントを記述する
https://developer.mozilla.org/ja/docs/Web/Events

v-onでイベント発火をさせている状態のみ。
function(event) からconsole.log(event)で中身を取得することができる。
event.clientX event.clientY

v-onなどイコールで実行をそのままHTMLに記述するのはナンセンス。vue内のメソッドに記述する。

v-on:click 複数の引数を利用して、eventを入れる場合は$eventとする。
change($event, 10)

20. スタッププロパゲーション？　Vueは　.stopのみで対応可能。.selfも可能
prevetDefaultは　.preventで対応可能。
v-on:click.prevent;

v-on:keyup.enter keyup,spec な真後ろに追加できる。
動画56分

: bindの省略記法
@ onの省略記法　省略するかしないかは統一する。

v-model HTMLからVueの内容を書き換えることが可能なもの。

動的なプロパティ 
dataを動的な表現をすることができない。あくまで初期値

computedプロパティ
関数で書き、プロパティなのでreturnで返す
またthisでdataにアクセスする
return後は同期処理を書くのが普通。非同期処理はかけない(setTimeoutなど)

computed methodの違い
methodは　{{ function() }}でテンプレートで実行すると
テンプレート内が書きかわると実行される。関数内の変数が関係なくても実行される
this.○○での値が変更された場合のみ実行される。

なのでcomputedプロパティを使用する。computedプロパティは賢く、関数内にある変数が書き換わったのみ実行
される仕組みになっている。

watchは基本的には使用しない。computedを使用するのがベストプラクティス
変更された時に非同期に処理をすることができる。（例：３秒後に処理など）

compued内の関数はthis.counterが動いても実行されない。
watchで対応する
watch: {
  counter: function(){
  
  }
}

computed （）をつけない
methodは()を付ける
@click ="countUp()" //JavaScriptとして実行
@click ="countUp" //Vue.jsとして実行


:class="{ red: true, 'bg-blue': flase }"
@click = "isActive = !isActive"
computed内のオブジェクトでも対応可能

クラスやstyleバインドは、オブジェクトか配列で指定する(積極的にオブジェクトを使用する)
'background-color'みたいなケバブ形式は''で囲って指定する
:style="{ color: red, 'background-color: blue}" をdataとして扱う場合もある
data: {
  textColor: 'red',
  bgColor: 'blue'
}
オブジェクトにする
:style="styleObj"
styleObj: {
  textColor: 'red',
  bgColor: 'blue'
}

オブジェクトがあり、その後配列を検討する
配列構文で指定する場合は、複数のオブジェクトを指定する場合に役に立つ。:style="[styleObj, styleobj]"

v-elseはv-ifのすぐ下に書かないとだめ
v-ifは切り替えるのは重い（結構切り替える場合はshowを使用する）
v-if=""
v-else-if=""
v-else  
  
v-ifを複数条件分岐したい場合はtemplateタグで囲む  
 
v-show v-ifと同じ効果。show は非表示にする場合は、display:none  
templateに使用できない（display:noneをタグにつけれない）  
v-elseみたいに使えない。  
また初期描画が遅い(フリッカーが起こる)

v-for(fruite, index) in fruits indexで番号を取得できる   
オブジェ区とは順番が保証されない  
v-for(fruite, key) in fruits オブジェクトのkeyを取得できる  

<template v-for""> できれいにしたに線を引ける。
<li></li>
<hr>
</template>

n in 10で整数値を使用できる  
{{ n }}  
in は of も使用できる(イテレーター構文)  

v-for="(fruite, key) in fruits" :key="fruit"  
key は template で使用できない indexを使用しない配列の0番目１番目などごちゃになる  
  
new Vue 複数インスタンスを使用できるが基本使用しない。  
new Vue を変数にまとめることで外側から変更することが可能 var vm1 = new Vue  

53. 外側から追加した場合、リアクティブデータにならない（上記の方法）  
getter setter watcher を工夫してみる console.log(vm) などインスタンスの中身を見れる　しかし外付けのプロパティは作成されていないのが確認できる

comnsole.log(vm.$data)  ユーザーが使用するのは$が付いている.  
$: ダラーと読む  
あとから追記できないが元々定義された変数をdata: dataなどの書き方ができる data={ neme: , message: ,}  
  
this.$data でインスタンスの中からアクセスできる。
ホームページ　API で$一覧が確認できる  
https://jp.vuejs.org/v2/api/index.html#%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3  
  
$mount は　el: #app を指定できる $mount(#app);  
new Vue({  
  template: "<h1>M {{ name }}</h1>"  
}).$mount('#app');  
templateプロパティは、タグを代わりになる。  

59. createElementとrenderは違う.  
render h('h1', 'こんにちは') はVNodeを作成している。仮想DOM  
https://qiita.com/teinen_qiita/items/ed1bb1909a17f9ca9daa  
console.log(document) console.dir(document);  
dir -> log オブジェクトからDOMに変換している  

60. DOMを見ないで仮想DOMの違いを見つけて、すばやく必要な部分だけ変更することが出来る。  
62.要確認　

63.this.$destroyですべて破棄することできる 破壊後、名前を変更しようとしても機能しない  
https://jp.vuejs.org/v2/api/#vm-destroy  

Babel ES6をES5に変換　ブラウザ対応  
ESLint 検証ツール　バグを発見  
node.js 開発用サーバー  
yarn Facebookが公開してる管理サーバー  
Vue CLi サーバーがあれば更新が楽になる  
  
  
 ファイル構成  
  node-module パッケージが入っている
  gitnonre 
  babel.config.js  ES5に書き換え  
  package.json postcss はcssをどのようなルールでやるか  
  public @vue/cli-serverはwebpack srcの中身を見てる.なのでwebpackに見られたくないものはpublic  
  基本的にはファイルは置かない  
   indexはhead metaなどを設定する
   assets /css/image/が入る  
   
   main.js importVue はpackage のVueをインポート  
   main.js はindex.htmlに読み込まれている
   
   render: h => h(App) Appはコンポーネントオブジェクトを返している.  
   App.vue シングルコンポーネントになる  
   
   distは実際にできるファイル  
   npm run bulid //package.jsonファイルのbulidを実行 chunk-venderはnode-module  
   
   
